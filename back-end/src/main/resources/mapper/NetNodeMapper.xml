<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bandweaver.maxsec.mapper.NetNodeMapper">

    <resultMap id="BaseResultMap" type="com.bandweaver.maxsec.entity.NetNode">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="father_id" jdbcType="INTEGER" property="fatherId"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="used_id" jdbcType="INTEGER" property="usedId"/>
        <result column="connected" jdbcType="BOOLEAN" property="connected"/>
        <result column="root" jdbcType="BOOLEAN" property="root"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, father_id, level, type, used_id, connected, root, create_time
    </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from netnode
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from netnode
    </select>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from netnode
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.bandweaver.maxsec.entity.NetNode">
        insert into netnode
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="fatherId != null">
                father_id,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="usedId != null">
                used_id,
            </if>
            <if test="connected != null">
                connected,
            </if>
            <if test="root != null">
                root,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="fatherId != null">
                #{fatherId,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="usedId != null">
                #{usedId,jdbcType=INTEGER},
            </if>
            <if test="connected != null">
                #{connected,jdbcType=BOOLEAN},
            </if>
            <if test="root != null">
                #{root,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.bandweaver.maxsec.entity.NetNode">
        update netnode
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="fatherId != null">
                father_id = #{fatherId,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="usedId != null">
                used_id = #{usedId,jdbcType=INTEGER},
            </if>
            <if test="connected != null">
                connected = #{connected,jdbcType=BOOLEAN},
            </if>
            <if test="root != null">
                root = #{root,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>
